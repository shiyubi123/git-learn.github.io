{"version":3,"sources":["api.js","LandingPage.js","FoodCartPage.js","PlaceOrderPage.js","OrderManage.js","DeskManage.js","FoodManage.js","SettingManage.js","ManagePage.js","LoginPage.js","RegisterPage.js","history.js","App.js","serviceWorker.js","gloable.js","index.js"],"names":["api","axios","create","baseURL","LandingPage","props","confirm","customs","history","push","rid","did","state","customsChange","e","setState","target","value","dinfo","match","params","this","socket","io","on","emit","desk","memberCount","get","then","res","console","log","data","style","border","backgroundColor","fontFamily","title","tittle","name","textAlign","Group","onChange","Button","type","onClick","block","Component","withRouter","Meta","Card","MenuItem","food","onUpdateInc","onUpdateDec","amount","count","useState","setCount","useEffect","actions","pointerEvents","avatar","shape","size","src","img","description","desc","price","ShopcartEX","details","className","position","top","width","maxWidth","map","foodinfo","boxSizing","margin","float","marginLeft","Shopcart","total","placeOrder","visible","setvisible","onClose","placement","closable","bottom","borderTop","padding","left","background","borderRadius","marginRight","disabled","lineHeight","FoodCart","foodInc","deskid","foodDec","onInc","menu","idx","foods","findIndex","it","order","totalPrice","onDec","placeorder","JSON","stringify","post","deskinfo","deskName","info","cart","index","cartfood","key","myorder","setmyorder","a","parse","borderBottom","overflow","href","Panel","Collapse","OrderItem","status","onDelete","orderInfo","setorder","delete","id","put","header","marginBottom","nama","right","OrderManage","orders","produce","splice","length","Form","WrappedFoodManage","setFoods","form","getFieldDecorator","FoodOptions","upProps","FoodItem","foodInfo","setfoodInfo","isModify","setisModify","category","foodprops","setfoodprops","modify","change","changeStatus","defaultValue","addonBefore","files","fd","FormData","val","append","confirmModify","go","isAddfood","setIsAddfood","addfoodprops","setaddfoodprops","IsaddFood","add","confirmFood","SettingManage","WrappedManage","useHistory","current","setcurrent","setInfo","response","onBack","selectedKeys","mode","Item","paddingLeft","paddingRight","to","path","component","DeskManage","FoodManage","WrappedNormalLoginForm","imgRef","useRef","preventDefault","validateFields","err","values","username","password","captcha","alert","msg","onSubmit","rules","required","message","prefix","color","placeholder","Password","verticalAlign","height","setTimeout","captchaCode","Date","now","ref","valuePropName","initialValue","htmlType","WrappedRegister","email","goback","createHashHistory","App","exact","LoginPage","FoodCartPage","PlaceOrderPage","ManagePage","RegisterPage","Boolean","window","location","hostname","_","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0de1a207.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n\r\n\r\nconst api = axios.create({\r\n    baseURL:'/api',\r\n    //为什么不能localhost:以地址栏的地址跨域，当为localhost的时候，无法确定具体的域\r\n    // withCredentials:true,\r\n})\r\n\r\nexport default api","import React,{ Component} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport './landStyle.css'\r\nimport api from './api'\r\nimport io from 'socket.io-client'\r\nimport './LandingPage.css'\r\n\r\n//路由跳转  用withRouter包一次组件，然后组件就有props，而props中通过history来进行跳转\r\n\r\nimport { Button, Icon, Radio ,PageHeader} from 'antd';\r\nimport 'antd/dist/antd.css'\r\n\r\n\r\nclass LandingPage extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            customs:0,\r\n            dinfo:null\r\n        }\r\n\r\n        this.rid = props.match.params.rid\r\n        this.did = props.match.params.did\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.socket = io()\r\n\r\n        this.socket.on('connect',() => {\r\n            this.socket.emit('join desk',{desk:this.did})\r\n            //加入相应餐桌并告知后端客户加入\r\n        })\r\n        this.socket.on('someone in',(memberCount) => {\r\n            this.props.history.push(`/r/${this.rid}/d/${this.did}/c/${memberCount}`)\r\n        })\r\n\r\n        \r\n        api.get(`/deskinfo?did=${this.did}`).then(res => {\r\n            console.log(res)\r\n            this.setState({\r\n                dinfo:res.data\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    \r\n    confirm = (customs) => {\r\n        this.props.history.push(`/r/${this.rid}/d/${this.did}/c/${this.state.customs}`)\r\n    }\r\n\r\n    customsChange = e => {\r\n        this.setState({ customs: e.target.value });\r\n    };\r\n\r\n    render(){\r\n        return(\r\n                <div>\r\n                    <PageHeader\r\n                        style={{\r\n                            border: '1px solid rgb(235,237,240)',\r\n                            backgroundColor:'rgb(51,136,255)',\r\n                            fontFamily: \"Microsoft Yahei\"\r\n                        }}\r\n                        title={'尊敬的' + (this.state.dinfo ? this.state.dinfo.tittle + '-' + this.state.dinfo.name : '请等待加载桌面') + '桌顾客，欢迎您！'}\r\n                    />\r\n                    <h2 style={{textAlign:'center'}}>请选择点餐人数</h2>\r\n                    <Radio.Group value={this.state.customs} onChange={this.customsChange}>\r\n                        <Radio.Button value={1}>1人</Radio.Button>\r\n                        <Radio.Button value={2}>2人</Radio.Button>\r\n                        <Radio.Button value={3}>3人</Radio.Button>\r\n                        <Radio.Button value={4}>4人</Radio.Button>\r\n                    </Radio.Group>\r\n                    <Button type=\"primary\" onClick={() => {this.confirm(this.state.customs)}} block>确定</Button>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(LandingPage)","import React,{useState,useEffect,Component} from 'react'\r\nimport api from './api.js'\r\nimport Proptypes from 'prop-types'\r\nimport './foodCartPage.css'\r\nimport io from 'socket.io-client'\r\n\r\nimport { Form, Icon, Button ,Spin, Card , Avatar,Drawer,PageHeader} from 'antd';\r\nimport 'antd/dist/antd.css'\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction MenuItem({food,onUpdateInc,onUpdateDec}){\r\n    var amount = food.count\r\n    var [count,setCount] = useState(amount)\r\n\r\n    useEffect(() => {\r\n        setCount(amount)\r\n    },[amount])\r\n    \r\n\r\n    function inc(){\r\n        setCount(count+1)\r\n        onUpdateInc(food,count+1)\r\n    }\r\n    \r\n    function dec(){\r\n        if(count > 0){\r\n            setCount(count-1)\r\n            onUpdateDec(food,count-1)\r\n        }else{\r\n            return\r\n        }\r\n    }\r\n\r\n    MenuItem.propTypes = {\r\n        food:Proptypes.object.isRequired,\r\n        onDec:Proptypes.func,\r\n        onInc:Proptypes.func\r\n    }\r\n\r\n    return (\r\n            <div>\r\n                <Card\r\n                    style={{\r\n                    border:'5px solid rgb(235,237,240)',\r\n                    }}\r\n                    actions={[\r\n                    <Button onClick={() => dec()}>\r\n                        <Icon type=\"minus\" />\r\n                    </Button>,\r\n                    <h2>\r\n                        {count ? count : 0}\r\n                    </h2>,\r\n                    <Button onClick={() => inc()}>\r\n                        <Icon type=\"plus\" />\r\n                    </Button>,\r\n                ]}\r\n                >\r\n                    <Meta\r\n                        style=\r\n                        {{\r\n                            pointerEvents:'none'\r\n                        }}\r\n                        avatar={<Avatar shape=\"square\" size={110} src={'/upload/' + food.img} />}\r\n                        title={\"名称:\"+food.name}\r\n                        description={\r\n                            <div>\r\n                                {\r\n                                    <div>\r\n                                        <div>描述:  {food.desc}</div>\r\n                                        <div>价格:  {food.price}</div>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        }\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n}\r\n\r\nfunction ShopcartEX({details}){\r\n    return(\r\n        <div className='shopCartEX' style={{position:\"absolute\",top:'55px',width:'100%',maxWidth:'90%',}}>\r\n            {\r\n                details.map(foodinfo => {\r\n                    if(foodinfo.count !== 0){\r\n                        return(\r\n                            <div style={{boxSizing:'border-box', maxWidth:'100%', margin:'5px'}}>\r\n                                <div style={{float:'left',width:'50%',}}>名称:{foodinfo.name}</div>\r\n                                <div style={{float:'right',marginLeft:'20px'}}>\r\n                                    价格：{foodinfo.count * foodinfo.price}\r\n                                </div>\r\n                                <div style={{float:'right',}}>数量：{foodinfo.count}</div>\r\n                            </div>\r\n                        )\r\n                    }else{\r\n                        return\r\n                    }\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Shopcart({total,details,placeOrder}){\r\n    var [visible,setvisible] = useState(false)\r\n\r\n    function showDrawer () {\r\n        setvisible(true)\r\n    };\r\n\r\n    function onClose () {\r\n        setvisible(false)\r\n    };\r\n\r\n    function orderPlace(){\r\n        onClose()\r\n        placeOrder()\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <Drawer\r\n                title=\"购物车\"\r\n                placement='bottom'\r\n                closable={false}\r\n                onClose={onClose}\r\n                visible={visible}\r\n            >\r\n                <ShopcartEX details={details}/>\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        bottom: 0,\r\n                        width: '100%',\r\n                        borderTop: '1px solid #e8e8e8',\r\n                        padding: '10px 16px',\r\n                        textAlign: 'right',\r\n                        left: 0,\r\n                        background: '#fff',\r\n                        borderRadius: '0 0 4px 4px',\r\n                    }}\r\n                >\r\n                    <Button\r\n                        style={{\r\n                            marginRight: 8,\r\n                        }}\r\n                        onClick={onClose}\r\n                    >\r\n                        收起\r\n                    </Button>\r\n                    <Button onClick={orderPlace} type=\"primary\">\r\n                        下单\r\n                    </Button>\r\n                </div>\r\n            </Drawer>\r\n            <div \r\n                style={{\r\n                        position: 'fixed',\r\n                        bottom: 0,\r\n                        width: '100%',\r\n                        borderTop: '1px solid #e8e8e8',\r\n                        padding: '10px 16px',\r\n                        textAlign: 'right',\r\n                        left: 0,\r\n                        background: '#fff',\r\n                        borderRadius: '0 0 4px 4px',\r\n                    }}\r\n            >\r\n                <Button type=\"primary\" onClick={showDrawer} style={{float:'left'}} disabled={total>0?false:true}>\r\n                    <Icon type=\"shopping-cart\" />\r\n                    购物车\r\n                </Button>\r\n                <Button type=\"primary\" style={{float:'right', marginLeft:'10px'}} onClick={placeOrder}>下单</Button>\r\n                <div style={{float:'right',lineHeight:'30px'}}>\r\n                    总价:{total}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default class FoodCart extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            deskinfo:null,\r\n            foods:[],\r\n            order:{\r\n                deskName:null,\r\n                totalPrice:0,\r\n                memberCount:this.memberCount,\r\n                details:[],\r\n            },\r\n        }\r\n\r\n        this.memberCount = this.props.match.params.count\r\n        this.did = this.props.match.params.did\r\n        this.rid = this.props.match.params.rid\r\n        this.history = this.props.history\r\n    }\r\n\r\n    componentDidMount(){\r\n        api.get(`/deskinfo?did=${this.did}`).then(res => {\r\n            this.setState({\r\n                deskinfo:res.data,\r\n                order:{\r\n                    deskName:res.data.name,\r\n                    totalPrice:0,\r\n                    memberCount:this.memberCount,\r\n                    details:[],\r\n                }\r\n            })\r\n        })\r\n\r\n        api.get('/menu/restaurant/1').then(res => {\r\n            this.setState({\r\n                foods:res.data\r\n            })\r\n        })\r\n\r\n        this.socket = io()\r\n        \r\n        this.socket.on('connect',() => {\r\n            this.socket.emit('join desk',{memberCount:this.memberCount,desk:this.did})\r\n            this.socket.emit('someone in',{memberCount:this.memberCount,desk:this.did})\r\n            //加入相应餐桌并告知后端客户加入\r\n        })\r\n        //连接成功后执行内部代码\r\n        //注：socketio前几次通信可能走ajax，所以可能看不到相应ws包\r\n\r\n        this.socket.on('cart food',info => {\r\n            var foods = this.state.foods\r\n            var cart = info.cartfood;\r\n            (function merge(foods,cart){\r\n                for(var idx in cart){\r\n                    // eslint-disable-next-line\r\n                    var index = foods.findIndex(it => it.name === cart[idx].name)\r\n                    foods[index].count = cart[idx].count\r\n                }\r\n            })(foods,cart)\r\n\r\n            if(info.totalPrice){\r\n                this.setState({\r\n                    foods:foods,\r\n                    order:{\r\n                        ...this.state.order,\r\n                        details:info.cartfood,\r\n                        totalPrice:info.totalPrice.total\r\n                    }\r\n                })\r\n            }\r\n            console.log(this.state)\r\n        })\r\n        //后端发回此桌面已经点了的菜单\r\n\r\n        this.socket.on('food inc',info => {\r\n            this.onInc(info.food,info.menu)\r\n        })\r\n        this.socket.on('food dec',info => {\r\n            this.onDec(info.food,info.menu)\r\n        })        \r\n        //实时获取点单并触发相应变化\r\n        \r\n        this.socket.on('order success',() => {\r\n            this.props.history.push(`/r/${this.rid}/d/${this.did}/placeorder`)\r\n        })\r\n    }\r\n\r\n    foodInc = (food,count) => {\r\n        var deskid = this.did\r\n        this.socket.emit('food inc',{food,count,deskid})\r\n    }\r\n    foodDec = (food,count) => {\r\n        var deskid = this.did\r\n        this.socket.emit('food dec',{food,count,deskid})\r\n    }\r\n    //传入下层组件，在下层组件点击后主动触发\r\n\r\n    onInc = (food,menu) => {\r\n        var idx = this.state.foods.findIndex(it => it.name === food.name)\r\n        if(idx >= 0){\r\n            var count = menu[idx].count\r\n            // eslint-disable-next-line\r\n            this.state.foods[idx].count = count\r\n        }else{\r\n            this.state.foods.push(food)\r\n        }\r\n\r\n        this.setState({\r\n            foods:this.state.foods,\r\n            order:{\r\n                ...this.state.order,\r\n                totalPrice:this.state.order.totalPrice+food.price,\r\n                details:menu\r\n            }\r\n        })\r\n        console.log(this.state.foods)\r\n    }\r\n\r\n    onDec = (food,menu) => {\r\n        var idx = this.state.foods.findIndex(it => it.name === food.name)\r\n        if(idx >= 0){\r\n            \r\n            if(menu[idx]){\r\n                var count = menu[idx].count\r\n                // eslint-disable-next-line\r\n                this.state.foods[idx].count = count\r\n            }else{\r\n                // eslint-disable-next-line\r\n                this.state.foods[idx].count = 0\r\n            }\r\n            \r\n        }else{\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            order:{\r\n                ...this.state.order,\r\n                totalPrice:this.state.order.totalPrice-food.price,\r\n                details:menu\r\n            }\r\n        })\r\n    }\r\n    //收到变化传来的参数并改变内容\r\n\r\n    placeOrder = () => {\r\n        var placeorder = {\r\n            ...this.state.order,\r\n            details:JSON.stringify(this.state.order.details)\r\n        }\r\n        api.post(`/restaurant/${this.rid}/desk/${this.did}/order`,placeorder)\r\n        this.props.history.push(`/r/${this.rid}/d/${this.did}/placeorder`)\r\n        this.socket.emit('order success',this.did)\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div> \r\n                <PageHeader\r\n                    style={{\r\n                        border: '1px solid rgb(235,237,240)',\r\n                        backgroundColor:'rgb(51,136,255)',\r\n                        fontFamily: \"Microsoft Yahei\"\r\n                    }}\r\n                    title='菜单界面'\r\n                />\r\n                {\r\n                    this.state.foods.map(food => {\r\n                        return <MenuItem key={food.name} food={food} onUpdateInc={this.foodInc} onUpdateDec={this.foodDec} />\r\n                    })\r\n                }\r\n                <Shopcart total={this.state.order.totalPrice} details={this.state.order.details} placeOrder={this.placeOrder}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//显示已经选择的菜品以及数量，总价与清除功能\r\n\r\n// export default withRouter(function (props){\r\n//     return(\r\n//         <div>\r\n//             <Suspense fallback={<div>loading...</div>}>\r\n//                 <Foodcart upProps={props}/>\r\n//             </Suspense>\r\n//         </div>\r\n//     )\r\n// })","import React,{useState,useEffect} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport api from './api'\r\n\r\n\r\nimport { Button, PageHeader} from 'antd';\r\nimport 'antd/dist/antd.css'\r\n\r\nexport default withRouter(function (props){\r\n    var [myorder,setmyorder] = useState({})\r\n    var params = props.match.params\r\n    var rid = params.rid\r\n    var did = params.did\r\n\r\n    \r\n    useEffect(() => {\r\n        (async() => {\r\n            var res = await api.get(`/restaurant/${rid}/desk/${did}/placeorder`)\r\n            setmyorder(res)\r\n        })()\r\n    // eslint-disable-next-line    \r\n    },[])\r\n    //不能直接set order为res.data,res在定义后在加载之前是空，所以此时直接用res.data会得到undefined\r\n    \r\n\r\n\r\n\r\n    if(myorder.data){\r\n        var details = JSON.parse(myorder.data.details)\r\n        var total = myorder.data.totalPrice\r\n\r\n        return(\r\n            <div>\r\n                <PageHeader\r\n                    style={{\r\n                        border: '1px solid rgb(235,237,240)',\r\n                        backgroundColor:'rgb(51,136,255)',\r\n                        fontFamily: \"Microsoft Yahei\"\r\n                    }}\r\n                    title='下单成功！'\r\n                />\r\n                {\r\n                    details.map(food => {\r\n                        if(food.count !== 0){\r\n                            return(\r\n                                <div style={{boxSizing:'border-box', borderBottom:'1px solid black',overflow:'hidden', maxWidth:'100%', margin:'5px'}}>\r\n                                    <div style={{float:'left',width:'50%',}}>名称:{food.name}</div>\r\n                                    <div style={{float:'right',marginLeft:'20px'}}>\r\n                                        价格：{food.count * food.price}\r\n                                    </div>\r\n                                    <div style={{float:'right',}}>数量：{food.count}</div>\r\n                                </div>\r\n                            )\r\n                        }else{\r\n                            return\r\n                        }\r\n                    })\r\n                }\r\n                <div \r\n                    style={{\r\n                        position: 'fixed',\r\n                        bottom: 0,\r\n                        width: '100%',\r\n                        borderTop: '1px solid #e8e8e8',\r\n                        padding: '10px 16px',\r\n                        textAlign: 'right',\r\n                        left: 0,\r\n                        background: '#fff',\r\n                        borderRadius: '0 0 4px 4px',\r\n                    }}\r\n                >\r\n                    <Button type=\"primary\" style={{float:'right', marginLeft:'10px'}}>\r\n                        <a href=\"http://localhost:3000/#/landing/r/1/d/1\">再来一单</a>\r\n                    </Button>\r\n                    <div style={{float:'right',lineHeight:'30px'}}>\r\n                        总价:{total}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }else {\r\n        return <div>loading...</div>\r\n    }\r\n\r\n\r\n    // var [myorder,setmyorder] = useState({})\r\n\r\n    // useEffect(() => {\r\n    //     api.get(`/restaurant/${rid}/desk/${did}/placeorder`).then(res => {\r\n    //         console.log(res)\r\n    //         setmyorder(res.data)\r\n    //     })\r\n    // // eslint-disable-next-line\r\n    // },[])\r\n    // 为什么会报错，只能读取res，res.data\r\n    \r\n})\r\n","import React,{useState,Component} from 'react'\r\nimport io from 'socket.io-client'\r\nimport api from './api.js'\r\nimport produce from 'immer'\r\n//这个页面进入后就需要跟服务器建立相关的连接·\r\n//socket io 有两个包，一个是在后端用的(socket.io)，这个是前端用的(socket.io-client)\r\n\r\nimport './orderManage.css'\r\nimport { Form, Icon, Button ,Spin, Card , Collapse} from 'antd';\r\nimport 'antd/dist/antd.css'\r\n\r\nconst { Meta } = Card;\r\nconst { Panel } = Collapse;\r\n\r\nfunction OrderItem({order,onDelete}){\r\n    var [orderInfo,setorder] = useState(order)\r\n    \r\n    function confirmOrder(){\r\n        api.put(`restaurant/1/order/${order.id}/status`,{\r\n            status:'confirmed'\r\n        }).then(() => {\r\n            setorder({\r\n                ...orderInfo,\r\n                status:'confirmed'\r\n            })\r\n        })\r\n    }\r\n\r\n    function completeOrder(){\r\n        api.put(`restaurant/1/order/${order.id}/status`,{\r\n            status:'completed'\r\n        }).then(() => {\r\n            setorder({\r\n                ...orderInfo,\r\n                status:'completed'\r\n            })\r\n        })\r\n    }\r\n\r\n    async function deleteOrder(){\r\n        api.delete('restaurant/1/order/' + order.id)\r\n        onDelete(order)\r\n    }\r\n\r\n    function statusToCN(status){\r\n        if(status === 'pending'){\r\n            return '  等待订单确认中'\r\n        } else if(status === 'confirmed'){\r\n            return '  已确认'\r\n        } else {\r\n            return '  已完成'\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Card\r\n                style={{\r\n                    border:'5px solid rgb(235,237,240)',\r\n                }}\r\n                actions={[\r\n                    <Button>\r\n                        <Icon type=\"printer\" />\r\n                        打印\r\n                    </Button>,\r\n                    <Button onClick={confirmOrder}>\r\n                        <Icon type=\"check-circle\" />\r\n                        确认\r\n                    </Button>,\r\n                    <Button onClick={completeOrder}>\r\n                        <Icon type=\"file-done\" />\r\n                        完成\r\n                    </Button>,\r\n                    <Button onClick={deleteOrder}>\r\n                        <Icon type=\"close-circle\" />\r\n                        取消\r\n                    </Button>,\r\n                ]}\r\n            >\r\n                <Meta\r\n                    style=\r\n                    {{\r\n                        pointerEvents:'none'\r\n                    }}\r\n                    title={\"桌号:\"+orderInfo.deskName}\r\n                    description={\r\n                        <div>\r\n                            {\r\n                                '总价格:'+orderInfo.totalPrice+\r\n                                '    人数:'+orderInfo.memberCount+\r\n                                '    订单状态:'+statusToCN(orderInfo.status)\r\n                            }\r\n                            <Collapse>\r\n                                <Panel \r\n                                    header=\"订单详情\" \r\n                                    key=\"1\"\r\n                                    style={{\r\n                                        pointerEvents: 'initial',\r\n                                        marginBottom:'10px',\r\n                                    }}\r\n                                >\r\n                                    <div>{\r\n                                        orderInfo.details.map(it => {\r\n                                            return <div style={{position:'relative'}} key={it.nama}>\r\n                                                <div style={{float:'right'}}>{'数量:'+it.count}</div><div style={{width:'100px',position:'absolut',right:'0px'}}>{'菜品:'+it.name}</div>\r\n                                            </div>\r\n                                        })\r\n                                    }</div>\r\n                                </Panel>\r\n                            </Collapse>\r\n                        </div>\r\n                    }\r\n                    \r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default class OrderManage extends Component{\r\n    // useEffect(() => {\r\n    //     var socket = io()\r\n        \r\n    //     socket.on('new order',order => {\r\n    //         setorders({\r\n    //             ...orders,\r\n    //             order,\r\n    //         })\r\n    //     })\r\n\r\n    //     return() => {socket.close()} \r\n    //     //当界面被切走的时候应该取消掉这个订单\r\n    // },[])\r\n    //socketio只要一次连上就好了，所以只要运行一次不应该被重复运行，要放到useEffect内。第二个参数为空数组时表示只运行一次，[]中如果有变量，则每次运行useEffect会加载最近的一次该变量值。\r\n    //为什么不好用useEffect，因为这样每次更新io创建又取消，而真正实现较为复杂，所以用class组件使用hooks函数更为方便\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            orders:[]\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.socket = io()\r\n\r\n        this.socket.on('new order',order => {\r\n            this.setState(state => ({\r\n                orders:[order,...this.state.orders]\r\n            }))\r\n        })\r\n\r\n\r\n        //前端socketio开启使用\r\n\r\n        api.get('/restaurant/1/order').then(res => {\r\n            this.setState({\r\n                orders:res.data\r\n            })\r\n        })\r\n    }\r\n    //react 常用hooks，\r\n\r\n    onDelete = (order) => {\r\n        var idx = this.state.orders.findIndex(it => (it.id === order.id))\r\n\r\n        this.setState(produce(state =>{\r\n            state.orders.splice(idx,1)\r\n        }))\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {this.state.orders.length > 0 ?\r\n                        this.state.orders.map(order => {\r\n                        return <OrderItem  key={order.id} order={order} onDelete={this.onDelete} />\r\n                    })\r\n                    :\r\n                    <Spin />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst WrappedManage = Form.create({ name: 'orderManage' })(OrderManage);","import React from 'react'\r\n\r\nexport default function OrderManage(){\r\n    return (\r\n        <div>功能开发中，请耐心等待...</div>\r\n    )\r\n}","import React,{useState,useEffect} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport api from './api'\r\n\r\nimport './foodManage.css'\r\nimport { Icon,Input, Button ,Card ,  Avatar, Form} from 'antd';\r\nimport 'antd/dist/antd.css'\r\nconst { Meta } = Card;\r\nconst WrappedFoodManage = Form.create({ name: 'FoodManage' })(FoodManage);\r\nconst WrappedFoodItem = Form.create({ name: 'FoodItem' })(FoodItem);\r\n\r\n\r\nfunction FoodItem({food,upProps}){\r\n    var [foodInfo,setfoodInfo] = useState(food)\r\n    //为了将修改后put到后端返回的结果再重新更新到页面中，需要用这个\r\n    var [isModify,setisModify] = useState(false)\r\n    //用于切换修改与非修改时候food的状态\r\n    var [foodprops,setfoodprops] = useState({\r\n        name:food.name,\r\n        desc:food.desc,\r\n        price:food.price,\r\n        category:food.category,\r\n        status:food.status,\r\n        img:null,\r\n    })\r\n    //用于获取修改时food的各个信息以及实时更新，并在确认修改后将信息传给后端\r\n\r\n    \r\n    function modify(isModify){\r\n        if(isModify === false){\r\n            setisModify(true)\r\n        } else {\r\n            setisModify(false)\r\n        }\r\n    }\r\n\r\n    function change(e){\r\n        setfoodprops({\r\n            ...foodprops,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    function imgChange(e){\r\n        setfoodprops({\r\n            ...foodprops,\r\n            img:e.target.files[0],\r\n        })\r\n    }\r\n\r\n    function confirmModify(){\r\n        var fd = new FormData()\r\n\r\n        for(var key in foodprops){\r\n            var val = foodprops[key]\r\n            fd.append(key,val)\r\n        }\r\n\r\n        api.put('/restaurant/1/food/' +　food.id,fd).then((foodinfo) => {\r\n            setisModify(false)\r\n            setfoodInfo(foodinfo.data)\r\n        })\r\n    }\r\n    //写到此时，如何获取rid是个问题，因为我们在这个组件中既没有从上级得到相关数据，而网址中也不含有相关信息，所以办法一个是上层组件传入餐厅信息，第二个是在网址中获取\r\n\r\n    function deleteFood(props){\r\n        api.delete('/restaurant/1/food/' + food.id).then(() => {\r\n            props.history.go(0)\r\n        })    \r\n    }\r\n\r\n    function changeStatus(foodprops){\r\n        if(foodprops.status === 'on'){\r\n            setfoodprops({\r\n                ...foodprops,\r\n                status:'off',\r\n            })\r\n        } else {\r\n            setfoodprops({\r\n                ...foodprops,\r\n                status:'on',\r\n            })\r\n        }\r\n        \r\n        api.put('/restaurant/1/food/' +　food.id,foodprops)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !isModify \r\n                ? \r\n                <Card\r\n                    actions={[\r\n                        <Button onClick={() => {modify(isModify)}}>\r\n                            <Icon type=\"printer\" />\r\n                            修改\r\n                        </Button>,\r\n                        <Button onClick={()=> changeStatus(foodprops)}>\r\n                            <Icon type=\"check-circle\" />\r\n                            {foodprops.status === 'on' ? '上架' : '下架'}\r\n                        </Button>,\r\n                        <Button onClick={() => deleteFood(upProps)}>\r\n                            <Icon type=\"file-done\" />\r\n                            删除\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <Meta\r\n                        avatar={<Avatar shape=\"square\" size={110} src={\"http://localhost:8406/upload/\"+foodInfo.img}/>}\r\n                        title={foodInfo.name}\r\n                        description={\r\n                            <div>\r\n                                <div>描述：{foodInfo.desc ? foodInfo.desc : '暂无描述'}</div>\r\n                                <div>价格：{foodInfo.price}</div>\r\n                                <div>分类：{foodInfo.category ? foodInfo.category : '暂未分类'}</div>\r\n                            </div>\r\n                        }\r\n                    />\r\n                </Card>\r\n                :\r\n                <div>\r\n                    <div>\r\n                        <form>\r\n                            <Input \r\n                                type=\"text\" \r\n                                onChange={change} \r\n                                defaultValue={foodInfo.name} \r\n                                name=\"name\"\r\n                                addonBefore=\"名称\"\r\n                            ></Input>\r\n                            <Input \r\n                                type=\"text\" \r\n                                onChange={change} \r\n                                defaultValue={foodInfo.desc} \r\n                                name=\"desc\"\r\n                                addonBefore=\"描述\"\r\n                            ></Input>\r\n                            \r\n                            <Input \r\n                                type=\"text\" \r\n                                onChange={change} \r\n                                defaultValue={foodInfo.price} \r\n                                name=\"price\"\r\n                                addonBefore=\"价格\"\r\n                            ></Input>\r\n                            <Input \r\n                                type=\"text\" \r\n                                onChange={change} \r\n                                defaultValue={foodInfo.category} \r\n                                name=\"category\"\r\n                                addonBefore=\"分类\"\r\n                            ></Input>\r\n                            <Input \r\n                                type=\"file\" \r\n                                onChange={imgChange} \r\n                                name=\"img\"\r\n                                addonBefore=\"图片\"\r\n                            ></Input>\r\n                        </form>\r\n                    </div>\r\n                    <div>\r\n                        <Button onClick={() => confirmModify()}>确认</Button>\r\n                        <Button onClick={() => {modify(isModify)}}>返回</Button>\r\n                        <Button onClick={()=> changeStatus(foodprops)}>\r\n                            <Icon type=\"check-circle\" />\r\n                            {foodprops.status === 'on' ? '上架' : '下架'}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                    //如何将修改form中的新数据获取并传出，第一种通过绑上4个ref(有点麻烦),第二种通过usestate\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction FoodOptions (props){\r\n    \r\n    var [isAddfood,setIsAddfood] = useState(false)\r\n    var [addfoodprops,setaddfoodprops] = useState({\r\n        name:null,\r\n        desc:null,\r\n        price:null,\r\n        category:null,\r\n        status:'on',\r\n        img:null,\r\n    })\r\n\r\n    function IsaddFood(){\r\n        if (isAddfood === false){\r\n            setIsAddfood(true)\r\n        } else {\r\n            setIsAddfood(false)\r\n        }\r\n    }\r\n\r\n    function add(e){\r\n        setaddfoodprops({\r\n            ...addfoodprops,\r\n            [e.target.name]:e.target.value,\r\n        })\r\n    }\r\n    function addimg(e){\r\n        setaddfoodprops({\r\n            ...addfoodprops,\r\n            img:e.target.files[0],\r\n        })\r\n    }\r\n\r\n    function confirmFood(props){\r\n        var fd = new FormData()\r\n        \r\n        for(var key in addfoodprops){\r\n            var val = addfoodprops[key]\r\n            fd.append(key,val)\r\n        }\r\n\r\n        api.post('/restaurant/1/food',fd).then(() => {\r\n            props.history.go(0)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                !isAddfood \r\n                ? \r\n                <div>\r\n                    <Button \r\n                        onClick={IsaddFood}\r\n                        type=\"primary \"\r\n                        block\r\n                    >\r\n                        添加菜品\r\n                    </Button>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <div>\r\n                        <form>\r\n                            <Input \r\n                                type=\"text\" \r\n                                onChange={add}  \r\n                                name=\"name\"\r\n                                addonBefore=\"名称\"\r\n                            ></Input>\r\n                            <Input \r\n                                type=\"text\" \r\n                                onChange={add}  \r\n                                name=\"desc\"\r\n                                addonBefore=\"描述\"\r\n                            ></Input>\r\n                            <Input \r\n                                type=\"text\" \r\n                                onChange={add}  \r\n                                name=\"price\"\r\n                                addonBefore=\"价格\"\r\n                            ></Input>\r\n                            <Input \r\n                                type=\"file\" \r\n                                onChange={addimg}  \r\n                                name=\"img\"\r\n                                addonBefore=\"图片\"\r\n                            ></Input>\r\n                            <Input \r\n                                type=\"text\" \r\n                                onChange={add}  \r\n                                name=\"category\"\r\n                                addonBefore=\"分类\"\r\n                            ></Input>\r\n                        </form>\r\n                    </div>\r\n                    <div>\r\n                        <Button onClick={() => confirmFood(props.upProps)}>确认</Button>\r\n                        <Button onClick={() => IsaddFood(isAddfood)}>返回</Button>\r\n                    </div>\r\n                </div>\r\n            } \r\n        </div>\r\n        //如何将修改form中的新数据获取并传出，第一种通过绑上4个ref(有点麻烦),第二种通过usestate\r\n    )\r\n}\r\n\r\nfunction FoodManage (props){\r\n    var [foods,setFoods] = useState([])\r\n    const { getFieldDecorator } = props.form\r\n\r\n    useEffect(() => {\r\n        api.get('restaurant/1/food').then(res => {\r\n            setFoods(res.data)\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <FoodOptions upProps={props}/>\r\n            <div>\r\n                {\r\n                    foods.map(food => {\r\n                        return <FoodItem key={food.id} food={food} upProps={props}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(WrappedFoodManage)","import React from 'react'\r\n\r\nexport default function SettingManage(){\r\n    return (\r\n        <div>功能开发中，请耐心等待...</div>\r\n    )\r\n}","import React, {useEffect, useState,Suspense} from 'react'\r\nimport {Switch,Link,Route,withRouter,useHistory} from 'react-router-dom'\r\nimport OrderManage from './OrderManage.js'\r\nimport DeskManage from './DeskManage.js'\r\nimport FoodManage from './FoodManage.js'\r\nimport SettingManage from './SettingManage.js'\r\nimport api from './api.js'\r\n\r\n\r\nimport './managePage.css'\r\nimport { Form, Icon, Menu ,PageHeader} from 'antd';\r\nimport 'antd/dist/antd.css'\r\nconst WrappedManage = Form.create({ name: 'manage' })(Manage);\r\n\r\n\r\nfunction Manage(props){\r\n    var history = useHistory()\r\n    var [current,setcurrent] = useState('orderManage')\r\n    var [info,setInfo] = useState(null)\r\n\r\n    \r\n    useEffect(() => {\r\n        (async () => {\r\n            try{\r\n                let response = await api.get('/userinfo')\r\n                setInfo(response.data)\r\n            } catch(e){\r\n                history.push('/')\r\n                //由Router维护的history，也可以window.history.hash='/',但不够规范\r\n            }\r\n        })()\r\n    // eslint-disable-next-line\r\n    },[])\r\n\r\n    async function logout () {\r\n        await api.get('/logout')\r\n        props.history.push('/') \r\n    }\r\n\r\n    function handleClick(e){\r\n        setcurrent(e.key)\r\n    };\r\n    return(\r\n        <div className='manageContainer'>\r\n            <PageHeader\r\n                style={{\r\n                    border: '1px solid rgb(235,237,240)',\r\n                    backgroundColor:'rgb(51,136,255)',\r\n                    fontFamily: \"Microsoft Yahei\"\r\n                }}\r\n                onBack={async() => {\r\n                    await api.get('/logout')\r\n                    props.history.push('/') \r\n                }}\r\n                title={info ? '欢迎:'+info.tittle : 'loading'}\r\n            />\r\n            <Menu style={{border:'1px solid rgb(235,237,240)'}} onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n                <Menu.Item style={{paddingLeft:'10px',paddingRight:'10px'}} key=\"orderManage\">\r\n                    <Icon style={{margin:'5px'}} type=\"profile\" />\r\n                    <Link style={{float:'right'}} to='/manage/order'>\r\n                        订单管理\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item style={{paddingLeft:'10px',paddingRight:'10px'}} key=\"foodManage\">\r\n                    <Icon style={{margin:'5px'}} type=\"appstore\" />\r\n                    <Link style={{float:'right'}} to='/manage/food'>\r\n                        菜品管理\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item style={{paddingLeft:'10px',paddingRight:'10px'}} key=\"deskManage\">\r\n                    <Icon style={{margin:'5px'}} type=\"appstore\" />\r\n                    <Link style={{float:'right'}} to='/manage/desk'>\r\n                        桌面管理\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item style={{paddingLeft:'10px',paddingRight:'10px'}} key=\"settingManage\">\r\n                    <Icon style={{margin:'5px'}} type=\"profile\" />\r\n                    <Link style={{float:'right'}} to='/manage/setting'>\r\n                        设置\r\n                    </Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n            <main style={{boxSizing: 'border-box',border:'1px solid rgb(235,237,240)'}}>\r\n                <Switch>\r\n                    <Route path='/manage/order' component={OrderManage}/>\r\n                    <Route path='/manage/desk' component={DeskManage}/>\r\n                    <Route path='/manage/food' component={FoodManage}/>\r\n                    <Route path='/manage/setting' component={SettingManage}/>\r\n                </Switch>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(WrappedManage)","import React,{useRef} from 'react'\r\nimport api from './api'\r\nimport {withRouter,Link} from 'react-router-dom'\r\n//withrouter包裹的函数可以借由props作为函数的参数，而props中有history进而实现跳转,但这一前提是包裹的是一个函数组件，或者通过react-router-dom中的usehistory。如果仅仅是个事件绑定的函数，则需要依靠Router维持的history\r\n\r\nimport './loginPage.css'\r\nimport { Form, Icon, Input, Button ,Checkbox} from 'antd';\r\nimport 'antd/dist/antd.css'\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(Login);\r\n//UI\r\n\r\nvar captchaCode = Date.now()\r\nfunction Login(props){\r\n    var imgRef = useRef()\r\n    const { getFieldDecorator } = props.form\r\n\r\n    async function login(e) {\r\n        e.preventDefault()//阻止表单的正常提交,而走后面的axios\r\n        \r\n        props.form.validateFields(async(err, values) => {\r\n            if (!err) {\r\n                var username = values.username\r\n                var password = values.password\r\n                var captcha = values.captcha\r\n                try{\r\n                    await api.post('/login', {username,password,captcha})\r\n                    props.history.push('/manage')\r\n                } catch(e) {\r\n                    alert(e.response.data.msg)\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    function anotherCaptcha(){\r\n        console.log(imgRef.current)\r\n        imgRef.current.src = \"\"\r\n        setTimeout(() => {\r\n                captchaCode = Date.now()\r\n            imgRef.current.src = \"/api/captcha?\" + captchaCode\r\n        },1)\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className='logPage'>\r\n            <div className='logContainer'>\r\n                <h1>商户登录</h1>\r\n                <Form onSubmit={login}>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('username', {\r\n                            rules: [{ required: true, message: '请输入您的用户名' }],\r\n                        })(\r\n                        <Input\r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"用户名\"\r\n                        />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('password', {\r\n                            rules: [{ required: true, message: '请输入您的密码' }],\r\n                        })(\r\n                        <Input.Password\r\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            type=\"password\"\r\n                            placeholder=\"密码\"\r\n                        />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('captcha', {\r\n                            rules: [{ required: true, message: '请输入您的验证码' }],\r\n                        })(\r\n                        <Input\r\n                            prefix={<Icon type=\"check\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"验证码\"\r\n                            style={{width:'140px',verticalAlign:'middle',height:'52px'}}\r\n                        />,\r\n                        )}\r\n                        {getFieldDecorator('captcha', {})(\r\n                        <img \r\n                            onClick={anotherCaptcha} \r\n                            src={\"/api/captcha?\" + captchaCode} \r\n                            ref={imgRef}/>,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('remember', {\r\n                            valuePropName: 'checked',\r\n                            initialValue: true,\r\n                        })(<Checkbox>记住我</Checkbox>)}\r\n                        <Link to=\"/register\">\r\n                            <a className='register'>用户注册</a>\r\n                        </Link><br/>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>\r\n                            登录\r\n                        </Button>\r\n                    </Form.Item>\r\n                    \r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n    //验证码不刷新问题:在请求获取验证码的地址后面加一个时间戳\r\n}\r\n\r\nexport default withRouter(WrappedNormalLoginForm)","import React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport api from './api.js';\r\n\r\nimport './registerPage.css'\r\nimport { Form,Input, Button } from 'antd';\r\nimport 'antd/dist/antd.css'\r\nconst WrappedRegister = Form.create({ name: 'normal_register' })(Register);\r\n\r\n\r\nfunction Register(props){\r\n    \r\n    const { getFieldDecorator } = props.form;\r\n\r\n    async function register(e){\r\n        e.preventDefault()\r\n\r\n        props.form.validateFields(async(err, values) => {\r\n            if (!err) {\r\n                var username = values.username\r\n                var password = values.password\r\n                var email = values.email\r\n                var tittle = values.tittle\r\n                try{\r\n                    await api.post('/register', {username,password,email,tittle})\r\n                    props.history.push('/login')\r\n                } catch(e) {\r\n                    alert(e.response.data.msg)\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    function goback(e){\r\n        e.preventDefault()\r\n        props.history.go(-1)\r\n        return false\r\n    }\r\n\r\n    return(\r\n        <div className='registerContainer'>\r\n            <h1>注册界面</h1>\r\n            <Form onSubmit={register}>\r\n                <Form.Item>\r\n                        {getFieldDecorator('username', {\r\n                            rules: [{ required: true, message: '请输入用户名' }],\r\n                        })(\r\n                        <Input\r\n                            placeholder=\"用户名注册\"\r\n                        />,\r\n                        )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                        {getFieldDecorator('password', {\r\n                            rules: [{ required: true, message: '请输入您的密码' }],\r\n                        })(\r\n                        <Input.Password\r\n                            type=\"password\"\r\n                            placeholder=\"密码设置\"\r\n                        />,\r\n                        )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                        {getFieldDecorator('email', {\r\n                            rules: [{ required: true, message: '请输入邮箱地址' }],\r\n                        })(\r\n                        <Input\r\n                            placeholder=\"邮箱地址注册\"\r\n                        />,\r\n                        )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                        {getFieldDecorator('tittle', {\r\n                            rules: [{ required: true, message: '请输入店名' }],\r\n                        })(\r\n                        <Input\r\n                            placeholder=\"店名注册\"\r\n                        />,\r\n                        )}\r\n                </Form.Item>\r\n                <Button htmlType=\"submit\">\r\n                    注册\r\n                </Button>\r\n                <Button onClick={(e)=>{goback(e)}} style={{float:'right'}}>返回</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(WrappedRegister)","import {createHashHistory} from 'history'\r\n\r\nexport default createHashHistory()","import React from 'react';\nimport './App.css';\nimport {HashRouter,Route , Switch} from 'react-router-dom'\nimport LandingPage from './LandingPage.js'\nimport FoodCartPage from './FoodCartPage.js'\nimport PlaceOrderPage from './PlaceOrderPage.js'\nimport ManagePage from './ManagePage.js'\nimport LoginPage from './LoginPage.js'\nimport RegisterPage from './RegisterPage.js'\nimport history from './history.js'\n\n// const userAccountMiddleware = require('./user-acount') // 后端客户处理\n// const restaurantMiddleWare = require('./restaurant') // 后端商户处理\n//什么时候用require，什么情况用import\n\n\n// app.use(async (req,res,next) => {\n\n// })\n\n// 用户侧\n// /landing/restautant/1/desk/1 扫码进入页面 选择人数\n// /restautant/1/desk/1 点餐页面\n\n\n// 商户侧\n// 登录\n// 后台管理 /manage\n  //订单管理 /order\n  //桌面管理 /desk\n  //菜品管理 /food\n  \n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch history={history}>\n      \n        <Route path='/' exact component={LoginPage}></Route>\n        \n        <Route path='/landing/r/:rid/d/:did' component={LandingPage}></Route>\n        <Route path='/r/:rid/d/:did/c/:count' component={FoodCartPage}></Route>\n        <Route path='/r/:rid/d/:did/placeorder' component={PlaceOrderPage}></Route>\n        \n        <Route path='/manage' component={ManagePage}></Route>\n        <Route path='/login' component={LoginPage}></Route>\n        <Route path='/register' component={RegisterPage}></Route>\n      </Switch>\n    </HashRouter>\n    //route path = '/'不加exact，'/'路径将能够满足任何访问路径，所以任何访问路径都会指向它\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import _ from 'lodash';\r\nimport api from './api.js';\r\nimport axios from 'axios';\r\n\r\nwindow._ = _\r\nwindow.api = api\r\nwindow.axios = axios","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './gloable.js'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}